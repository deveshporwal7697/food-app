{"version":3,"sources":["RecipeTile.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeTile","recipe","match","className","onClick","window","open","src","uuidv4","App","useState","query","setquery","recipes","setrecipes","url","getRecipeInfo","a","Axios","get","result","data","hits","console","log","onSubmit","e","preventDefault","type","placeholder","autoComplete","value","onChange","target","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAIe,SAASA,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OACnC,OAC8D,MAA5DA,EAAM,OAAN,MAA0BC,MAAM,0BAC9B,sBACEC,UAAU,aACVC,QAAS,kBAAMC,OAAOC,KAAKL,EAAM,OAAN,MAF7B,UAIE,qBAAKE,UAAU,kBAAkBI,IAAKN,EAAM,OAAN,QACtC,mBAAGE,UAAU,mBAAb,SACGF,EAAM,OAAN,OADkCO,kBCsC9BC,MA7Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAKMC,EAAG,0CAAsCJ,EAAtC,mBAHQ,WAGR,oBAFY,oCAIfK,EAAa,uCAAG,4BAAAC,EAAA,sEACDC,IAAMC,IAAIJ,GADT,OAChBK,EADgB,OAEpBN,EAAWM,EAAOC,KAAKC,MACvBC,QAAQC,IAAIJ,EAAOC,KAAKC,MAHJ,2CAAH,qDAWnB,OACE,sBAAKnB,UAAU,MAAf,UACE,oBAAIC,QAASY,EAAb,4CACA,uBAAMb,UAAU,kBAAkBsB,SARrB,SAACC,GAChBA,EAAEC,iBACFX,KAME,UACE,uBACEb,UAAU,aACVyB,KAAK,OACLC,YAAY,mBACZC,aAAa,MACbC,MAAOpB,EACPqB,SAAU,SAACN,GAAD,OAAOd,EAASc,EAAEO,OAAOF,UAErC,uBAAO5B,UAAU,cAAcyB,KAAK,SAASG,MAAM,cAGrD,qBAAK5B,UAAU,eAAf,SACGU,IAAY,IACXA,EAAQqB,KAAI,SAACjC,GACX,OAAO,cAACD,EAAD,CAAYC,OAAQA,aC/BxBkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0131c0eb.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Recipe.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function RecipeTile({ recipe }) {\r\n  return (\r\n    recipe[\"recipe\"][\"image\"].match(/\\.(jpeg|jpg|gif|png)$/) != null && (\r\n      <div\r\n        className=\"recipeTile\"\r\n        onClick={() => window.open(recipe[\"recipe\"][\"url\"])}\r\n      >\r\n        <img className=\"recipeTile__img\" src={recipe[\"recipe\"][\"image\"]} />\r\n        <p className=\"recipeTile__name\" key={uuidv4()}>\r\n          {recipe[\"recipe\"][\"label\"]}\r\n        </p>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import Axios from \"axios\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeTile from \"./RecipeTile\";\n\nfunction App() {\n  const [query, setquery] = useState(\"\");\n  const [recipes, setrecipes] = useState([]);\n\n  const YOUR_APP_ID = `d8a4140c`;\n  const YOUR_APP_KEY = \"150c92451244048bcaa4b1da7242e33c\";\n\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}`;\n\n  const getRecipeInfo = async () => {\n    var result = await Axios.get(url);\n    setrecipes(result.data.hits);\n    console.log(result.data.hits);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getRecipeInfo();\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 onClick={getRecipeInfo}>Food Recipe Plaza üçî</h1>\n      <form className=\"app__searchForm\" onSubmit={onSubmit}>\n        <input\n          className=\"app__input\"\n          type=\"text\"\n          placeholder=\"enter ingridient\"\n          autoComplete=\"Off\"\n          value={query}\n          onChange={(e) => setquery(e.target.value)}\n        />\n        <input className=\"app__submit\" type=\"submit\" value=\"Search\" />\n      </form>\n\n      <div className=\"app__recipes\">\n        {recipes !== [] &&\n          recipes.map((recipe) => {\n            return <RecipeTile recipe={recipe} />;\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}